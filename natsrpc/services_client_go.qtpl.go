// Code generated by qtc from "services_client_go.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line services_client_go.qtpl:2
package natsrpc

//line services_client_go.qtpl:2
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line services_client_go.qtpl:2
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line services_client_go.qtpl:2
func streamgoClientTemplate(qw422016 *qt422016.Writer, pkg *packageTmplData) {
//line services_client_go.qtpl:2
	qw422016.N().S(`
// Code generated by protoc-gen-go-nrpc. DO NOT EDIT.

package `)
//line services_client_go.qtpl:5
	qw422016.E().S(pkg.PackageName.Snake)
//line services_client_go.qtpl:5
	qw422016.N().S(`

import (
	"context"
	"fmt"
	"log"
	"time"

	"github.com/nats-io/nats.go"
	"google.golang.org/protobuf/proto"
)

`)
//line services_client_go.qtpl:17
	for _, svc := range pkg.Services {
//line services_client_go.qtpl:17
		qw422016.N().S(`
    `)
//line services_client_go.qtpl:18
		clientName := svc.Name.Pascal + "NATSClient"

//line services_client_go.qtpl:18
		qw422016.N().S(`

    type `)
//line services_client_go.qtpl:20
		qw422016.E().S(clientName)
//line services_client_go.qtpl:20
		qw422016.N().S(` struct {
        nc *nats.Conn
    }

    func New`)
//line services_client_go.qtpl:24
		qw422016.E().S(clientName)
//line services_client_go.qtpl:24
		qw422016.N().S(`(nc *nats.Conn) (*`)
//line services_client_go.qtpl:24
		qw422016.E().S(clientName)
//line services_client_go.qtpl:24
		qw422016.N().S(`, error) {
        client := &`)
//line services_client_go.qtpl:25
		qw422016.E().S(clientName)
//line services_client_go.qtpl:25
		qw422016.N().S(`{
            nc: nc,
        }
        return client, nil
    }

    func(client *`)
//line services_client_go.qtpl:31
		qw422016.E().S(clientName)
//line services_client_go.qtpl:31
		qw422016.N().S(`) Close() error {
        return client.nc.Drain()
    }

    `)
//line services_client_go.qtpl:35
		for _, method := range svc.Methods {
//line services_client_go.qtpl:35
			qw422016.N().S(`
        `)
//line services_client_go.qtpl:36
			cs, ss := method.IsClientStreaming, method.IsServerStreaming

//line services_client_go.qtpl:36
			qw422016.N().S(`
        `)
//line services_client_go.qtpl:37
			switch {
//line services_client_go.qtpl:38
			case !cs && !ss:
//line services_client_go.qtpl:38
				qw422016.N().S(`                `)
//line services_client_go.qtpl:39
				streamgoClientUnaryHandler(qw422016, method)
//line services_client_go.qtpl:39
				qw422016.N().S(`            `)
//line services_client_go.qtpl:40
			case cs && !ss:
//line services_client_go.qtpl:40
				qw422016.N().S(`                `)
//line services_client_go.qtpl:41
				streamgoClientClientStreamHandler(qw422016, method)
//line services_client_go.qtpl:41
				qw422016.N().S(`            `)
//line services_client_go.qtpl:42
			case !cs && ss:
//line services_client_go.qtpl:42
				qw422016.N().S(`                `)
//line services_client_go.qtpl:43
				streamgoClientServerStreamHandler(qw422016, method)
//line services_client_go.qtpl:43
				qw422016.N().S(`            `)
//line services_client_go.qtpl:44
			case cs && ss:
//line services_client_go.qtpl:44
				qw422016.N().S(`                `)
//line services_client_go.qtpl:45
				streamgoClientBidiStreamHandler(qw422016, method)
//line services_client_go.qtpl:45
				qw422016.N().S(`        `)
//line services_client_go.qtpl:46
			}
//line services_client_go.qtpl:46
			qw422016.N().S(`
    `)
//line services_client_go.qtpl:47
		}
//line services_client_go.qtpl:47
		qw422016.N().S(`

`)
//line services_client_go.qtpl:49
	}
//line services_client_go.qtpl:49
	qw422016.N().S(`
//#endregion Client
`)
//line services_client_go.qtpl:51
}

//line services_client_go.qtpl:51
func writegoClientTemplate(qq422016 qtio422016.Writer, pkg *packageTmplData) {
//line services_client_go.qtpl:51
	qw422016 := qt422016.AcquireWriter(qq422016)
//line services_client_go.qtpl:51
	streamgoClientTemplate(qw422016, pkg)
//line services_client_go.qtpl:51
	qt422016.ReleaseWriter(qw422016)
//line services_client_go.qtpl:51
}

//line services_client_go.qtpl:51
func goClientTemplate(pkg *packageTmplData) string {
//line services_client_go.qtpl:51
	qb422016 := qt422016.AcquireByteBuffer()
//line services_client_go.qtpl:51
	writegoClientTemplate(qb422016, pkg)
//line services_client_go.qtpl:51
	qs422016 := string(qb422016.B)
//line services_client_go.qtpl:51
	qt422016.ReleaseByteBuffer(qb422016)
//line services_client_go.qtpl:51
	return qs422016
//line services_client_go.qtpl:51
}

//line services_client_go.qtpl:53
func streamgoClientUnaryHandler(qw422016 *qt422016.Writer, method *methodTmplData) {
//line services_client_go.qtpl:53
	qw422016.N().S(`
`)
//line services_client_go.qtpl:55
	sn := method.Subject
	mn := method.Name.Pascal
	in := method.InputType.Original
	out := method.OutputType.Original

//line services_client_go.qtpl:59
	qw422016.N().S(`
// Unary call for `)
//line services_client_go.qtpl:60
	qw422016.E().S(mn)
//line services_client_go.qtpl:60
	qw422016.N().S(`
func (c *`)
//line services_client_go.qtpl:61
	qw422016.E().S(method.ServiceName.Pascal)
//line services_client_go.qtpl:61
	qw422016.N().S(`NATSClient) `)
//line services_client_go.qtpl:61
	qw422016.E().S(mn)
//line services_client_go.qtpl:61
	qw422016.N().S(`(ctx context.Context, req *`)
//line services_client_go.qtpl:61
	qw422016.E().S(in)
//line services_client_go.qtpl:61
	qw422016.N().S(`, opts ...NatsRpcOption) (*`)
//line services_client_go.qtpl:61
	qw422016.E().S(out)
//line services_client_go.qtpl:61
	qw422016.N().S(`, error){
	reqBytes, err := proto.Marshal(req)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal request: %w", err)
	}

	opt := NewNatsRpcOptions(opts...)

	msg, err := c.nc.Request("`)
//line services_client_go.qtpl:69
	qw422016.E().S(sn)
//line services_client_go.qtpl:69
	qw422016.N().S(`", reqBytes, opt.Timeout)
	if err != nil {
		return nil, fmt.Errorf("failed to send request: %w", err)
	}

	res := &`)
//line services_client_go.qtpl:74
	qw422016.E().S(out)
//line services_client_go.qtpl:74
	qw422016.N().S(`{}
	if err := proto.Unmarshal(msg.Data, res); err != nil {
		return nil, fmt.Errorf("failed to unmarshal response: %w", err)
	}

	return res, nil
}
`)
//line services_client_go.qtpl:81
}

//line services_client_go.qtpl:81
func writegoClientUnaryHandler(qq422016 qtio422016.Writer, method *methodTmplData) {
//line services_client_go.qtpl:81
	qw422016 := qt422016.AcquireWriter(qq422016)
//line services_client_go.qtpl:81
	streamgoClientUnaryHandler(qw422016, method)
//line services_client_go.qtpl:81
	qt422016.ReleaseWriter(qw422016)
//line services_client_go.qtpl:81
}

//line services_client_go.qtpl:81
func goClientUnaryHandler(method *methodTmplData) string {
//line services_client_go.qtpl:81
	qb422016 := qt422016.AcquireByteBuffer()
//line services_client_go.qtpl:81
	writegoClientUnaryHandler(qb422016, method)
//line services_client_go.qtpl:81
	qs422016 := string(qb422016.B)
//line services_client_go.qtpl:81
	qt422016.ReleaseByteBuffer(qb422016)
//line services_client_go.qtpl:81
	return qs422016
//line services_client_go.qtpl:81
}

//line services_client_go.qtpl:83
func streamgoClientClientStreamHandler(qw422016 *qt422016.Writer, method *methodTmplData) {
//line services_client_go.qtpl:83
	qw422016.N().S(`
`)
//line services_client_go.qtpl:85
	sn := method.Subject
	mn := method.Name.Pascal
	in := method.InputType.Original
	out := method.OutputType.Original

//line services_client_go.qtpl:89
	qw422016.N().S(`
// Client streaming call for `)
//line services_client_go.qtpl:90
	qw422016.E().S(mn)
//line services_client_go.qtpl:90
	qw422016.N().S(`
func( c *`)
//line services_client_go.qtpl:91
	qw422016.E().S(method.ServiceName.Pascal)
//line services_client_go.qtpl:91
	qw422016.N().S(`NATSClient) `)
//line services_client_go.qtpl:91
	qw422016.E().S(mn)
//line services_client_go.qtpl:91
	qw422016.N().S(`(ctx context.Context, reqGen func(reqCh chan<- *`)
//line services_client_go.qtpl:91
	qw422016.E().S(in)
//line services_client_go.qtpl:91
	qw422016.N().S(`) error, opts ...NatsRpcOption) (res *`)
//line services_client_go.qtpl:91
	qw422016.E().S(out)
//line services_client_go.qtpl:91
	qw422016.N().S(`, err error) {
	mailbox := nats.NewInbox()

	var (
		sub   *nats.Subscription
		resCh = make(chan *`)
//line services_client_go.qtpl:96
	qw422016.E().S(out)
//line services_client_go.qtpl:96
	qw422016.N().S(`)
		opt   = NewNatsRpcOptions(opts...)
	)
	sub, err = c.nc.Subscribe(mailbox, func(msg *nats.Msg) {
		log.Print("Got response from server")
		defer sub.Unsubscribe()
		defer close(resCh)

		t := time.NewTimer(opt.Timeout)

		select {
		case <-ctx.Done():
			err = ctx.Err()
			return
		case <-t.C:
			err = fmt.Errorf("timeout")
			return
		default:
			res = &`)
//line services_client_go.qtpl:114
	qw422016.E().S(out)
//line services_client_go.qtpl:114
	qw422016.N().S(`{}
			if err = proto.Unmarshal(msg.Data, res); err != nil {
				res = nil
				err = fmt.Errorf("failed to unmarshal response: %w", err)
				return
			}
			resCh <- res
		}
	})
	if err != nil {
		return nil, fmt.Errorf("failed to subscribe to response: %w", err)
	}

	doneReqGen := make(chan struct{})
	reqCh := make(chan *`)
//line services_client_go.qtpl:128
	qw422016.E().S(in)
//line services_client_go.qtpl:128
	qw422016.N().S(`)
	go func() {
		defer func(){
			eofMsg := &nats.Msg{
				Subject: "`)
//line services_client_go.qtpl:132
	qw422016.E().S(sn)
//line services_client_go.qtpl:132
	qw422016.N().S(`",
				Reply:   mailbox,
				Data: nil,
			}
			c.nc.PublishMsg(eofMsg)
		}()

		if err = reqGen(reqCh); err != nil {
			err = fmt.Errorf("failed to generate requests: %w", err)
			return
		}

		<-doneReqGen
	}()

	for req := range reqCh {
		log.Printf("Sending request to server: %v", req)
		reqBytes, err := proto.Marshal(req)
		if err != nil {
			return nil, fmt.Errorf("failed to marshal request: %w", err)
		}
		msg := &nats.Msg{
			Subject: "`)
//line services_client_go.qtpl:154
	qw422016.E().S(sn)
//line services_client_go.qtpl:154
	qw422016.N().S(`",
			Reply:   mailbox,
			Data:    reqBytes,
		}
		if err = c.nc.PublishMsg(msg); err != nil {
			return nil, fmt.Errorf("failed to send request: %w", err)
		}
	}
	doneReqGen <- struct{}{}

	res = <-resCh
	return
}
`)
//line services_client_go.qtpl:167
}

//line services_client_go.qtpl:167
func writegoClientClientStreamHandler(qq422016 qtio422016.Writer, method *methodTmplData) {
//line services_client_go.qtpl:167
	qw422016 := qt422016.AcquireWriter(qq422016)
//line services_client_go.qtpl:167
	streamgoClientClientStreamHandler(qw422016, method)
//line services_client_go.qtpl:167
	qt422016.ReleaseWriter(qw422016)
//line services_client_go.qtpl:167
}

//line services_client_go.qtpl:167
func goClientClientStreamHandler(method *methodTmplData) string {
//line services_client_go.qtpl:167
	qb422016 := qt422016.AcquireByteBuffer()
//line services_client_go.qtpl:167
	writegoClientClientStreamHandler(qb422016, method)
//line services_client_go.qtpl:167
	qs422016 := string(qb422016.B)
//line services_client_go.qtpl:167
	qt422016.ReleaseByteBuffer(qb422016)
//line services_client_go.qtpl:167
	return qs422016
//line services_client_go.qtpl:167
}

//line services_client_go.qtpl:169
func streamgoClientServerStreamHandler(qw422016 *qt422016.Writer, method *methodTmplData) {
//line services_client_go.qtpl:169
	qw422016.N().S(`
`)
//line services_client_go.qtpl:171
	sn := method.Subject
	mn := method.Name.Pascal
	in := method.InputType.Original
	out := method.OutputType.Original

//line services_client_go.qtpl:175
	qw422016.N().S(`
// Server streaming call for `)
//line services_client_go.qtpl:176
	qw422016.E().S(mn)
//line services_client_go.qtpl:176
	qw422016.N().S(`
func( c *`)
//line services_client_go.qtpl:177
	qw422016.E().S(method.ServiceName.Pascal)
//line services_client_go.qtpl:177
	qw422016.N().S(`NATSClient) `)
//line services_client_go.qtpl:177
	qw422016.E().S(mn)
//line services_client_go.qtpl:177
	qw422016.N().S(`(ctx context.Context, req *`)
//line services_client_go.qtpl:177
	qw422016.E().S(in)
//line services_client_go.qtpl:177
	qw422016.N().S(`, onRes func(res *`)
//line services_client_go.qtpl:177
	qw422016.E().S(out)
//line services_client_go.qtpl:177
	qw422016.N().S(`) error, opt ...NatsRpcOption) ( error) {
	reqBytes, err := proto.Marshal(req)
	if err != nil {
		return fmt.Errorf("failed to marshal request: %w", err)
	}

	mailbox := nats.NewInbox()
	msg := &nats.Msg{
		Subject: "`)
//line services_client_go.qtpl:185
	qw422016.E().S(sn)
//line services_client_go.qtpl:185
	qw422016.N().S(`",
		Reply :mailbox,
		Data:  reqBytes,
	}

	errCh := make(chan error)

	sub, err := c.nc.Subscribe(mailbox, func(msg *nats.Msg) {
		if len(msg.Data) == 0 {
			errCh <- nil
		}

		res :=  &`)
//line services_client_go.qtpl:197
	qw422016.E().S(out)
//line services_client_go.qtpl:197
	qw422016.N().S(`{}
		if err := proto.Unmarshal(msg.Data, res); err != nil {
			errCh <- fmt.Errorf("failed to unmarshal response: %w", err)
		}

		if err := onRes(res); err != nil {
			errCh <- fmt.Errorf("failed to handle response: %w", err)
		}
	})
	if err != nil {
		return fmt.Errorf("failed to subscribe: %w", err)
	}
	defer sub.Unsubscribe()

	if err := c.nc.PublishMsg(msg); err != nil {
		return fmt.Errorf("failed to send request: %w", err)
	}

	if err := <-errCh; err != nil {
		return fmt.Errorf("failed to handle response: %w", err)
	}

	return nil
}
`)
//line services_client_go.qtpl:221
}

//line services_client_go.qtpl:221
func writegoClientServerStreamHandler(qq422016 qtio422016.Writer, method *methodTmplData) {
//line services_client_go.qtpl:221
	qw422016 := qt422016.AcquireWriter(qq422016)
//line services_client_go.qtpl:221
	streamgoClientServerStreamHandler(qw422016, method)
//line services_client_go.qtpl:221
	qt422016.ReleaseWriter(qw422016)
//line services_client_go.qtpl:221
}

//line services_client_go.qtpl:221
func goClientServerStreamHandler(method *methodTmplData) string {
//line services_client_go.qtpl:221
	qb422016 := qt422016.AcquireByteBuffer()
//line services_client_go.qtpl:221
	writegoClientServerStreamHandler(qb422016, method)
//line services_client_go.qtpl:221
	qs422016 := string(qb422016.B)
//line services_client_go.qtpl:221
	qt422016.ReleaseByteBuffer(qb422016)
//line services_client_go.qtpl:221
	return qs422016
//line services_client_go.qtpl:221
}

//line services_client_go.qtpl:223
func streamgoClientBidiStreamHandler(qw422016 *qt422016.Writer, method *methodTmplData) {
//line services_client_go.qtpl:223
	qw422016.N().S(`
`)
//line services_client_go.qtpl:225
	sn := method.Subject
	mn := method.Name.Pascal
	in := method.InputType.Original
	out := method.OutputType.Original

//line services_client_go.qtpl:229
	qw422016.N().S(`
type Bidirectional`)
//line services_client_go.qtpl:230
	qw422016.E().S(mn)
//line services_client_go.qtpl:230
	qw422016.N().S(`Func func(ctx context.Context, reqCh chan<- *`)
//line services_client_go.qtpl:230
	qw422016.E().S(in)
//line services_client_go.qtpl:230
	qw422016.N().S(`, resCh <-chan *`)
//line services_client_go.qtpl:230
	qw422016.E().S(out)
//line services_client_go.qtpl:230
	qw422016.N().S(`) error
// Bidi streaming call for `)
//line services_client_go.qtpl:231
	qw422016.E().S(mn)
//line services_client_go.qtpl:231
	qw422016.N().S(`
func(c *`)
//line services_client_go.qtpl:232
	qw422016.E().S(method.ServiceName.Pascal)
//line services_client_go.qtpl:232
	qw422016.N().S(`NATSClient) `)
//line services_client_go.qtpl:232
	qw422016.E().S(mn)
//line services_client_go.qtpl:232
	qw422016.N().S(`(biDirectionalFunc Bidirectional`)
//line services_client_go.qtpl:232
	qw422016.E().S(mn)
//line services_client_go.qtpl:232
	qw422016.N().S(`Func) error {
	var (
		mailbox      = nats.NewInbox()
		serverResSub *nats.Subscription
		errCh        = make(chan error)
		reqCh        = make(chan *`)
//line services_client_go.qtpl:237
	qw422016.E().S(in)
//line services_client_go.qtpl:237
	qw422016.N().S(`)
		resCh        = make(chan *`)
//line services_client_go.qtpl:238
	qw422016.E().S(out)
//line services_client_go.qtpl:238
	qw422016.N().S(`)
		doneCh       = make(chan struct{})
	)
	defer close(resCh)
	defer close(doneCh)
	defer close(errCh)

	// Handle server responses
	serverResSub, err := c.nc.Subscribe(mailbox, func(msg *nats.Msg) {
		log.Print("Got response from server")

		if len(msg.Data) == 0 {
			doneCh <- struct{}{}
			return
		}

		res := &`)
//line services_client_go.qtpl:254
	qw422016.E().S(out)
//line services_client_go.qtpl:254
	qw422016.N().S(`{}
		if err := proto.Unmarshal(msg.Data, res); err != nil {
			errCh <- fmt.Errorf("failed to unmarshal response: %w", err)
			return
		}
		resCh <- res
	})
	if err != nil {
		return fmt.Errorf("failed to subscribe to response: %w", err)
	}
	defer serverResSub.Unsubscribe()

	ctx := context.Background()

	// Start user defined bidirectional handler
	go func() {
		if err := biDirectionalFunc(ctx, reqCh, resCh); err != nil {
			errCh <- fmt.Errorf("failed to handle bidi stream: %w", err)
		}
	}()

	// Take requests from user defined handler and send them to server
	go func() {
		for req := range reqCh {
			log.Printf("Sending request to server: %v", req)
			reqBytes, err := proto.Marshal(req)
			if err != nil {
				errCh <- fmt.Errorf("failed to marshal request: %w", err)
				return
			}
			msg := &nats.Msg{
				Subject: "`)
//line services_client_go.qtpl:285
	qw422016.E().S(sn)
//line services_client_go.qtpl:285
	qw422016.N().S(`",
				Reply:   mailbox,
				Data:    reqBytes,
			}
			if err = c.nc.PublishMsg(msg); err != nil {
				errCh <- fmt.Errorf("failed to send request: %w", err)
				return
			}
		}
		doneCh <- struct{}{}
	}()

	// Wait for context cancellation, error from user defined handler or EOF from server
	for {
		select {
		case <-ctx.Done():
			return ctx.Err()
		case err := <-errCh:
			if err != nil {
				return fmt.Errorf("failed to handle bidi stream: %w", err)
			}
			return nil
		case <-doneCh:
			return nil
		}
	}
}
`)
//line services_client_go.qtpl:312
}

//line services_client_go.qtpl:312
func writegoClientBidiStreamHandler(qq422016 qtio422016.Writer, method *methodTmplData) {
//line services_client_go.qtpl:312
	qw422016 := qt422016.AcquireWriter(qq422016)
//line services_client_go.qtpl:312
	streamgoClientBidiStreamHandler(qw422016, method)
//line services_client_go.qtpl:312
	qt422016.ReleaseWriter(qw422016)
//line services_client_go.qtpl:312
}

//line services_client_go.qtpl:312
func goClientBidiStreamHandler(method *methodTmplData) string {
//line services_client_go.qtpl:312
	qb422016 := qt422016.AcquireByteBuffer()
//line services_client_go.qtpl:312
	writegoClientBidiStreamHandler(qb422016, method)
//line services_client_go.qtpl:312
	qs422016 := string(qb422016.B)
//line services_client_go.qtpl:312
	qt422016.ReleaseByteBuffer(qb422016)
//line services_client_go.qtpl:312
	return qs422016
//line services_client_go.qtpl:312
}
