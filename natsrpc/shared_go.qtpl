{% func goSharedTypesTemplate(pkg *packageTmplData) %}
// Code generated by protoc-gen-go-nrpc. DO NOT EDIT.

package {%s pkg.PackageName.Snake %}

import (
	"fmt"
	"time"

	"github.com/nats-io/nats.go"
	"google.golang.org/protobuf/proto"
)

type NatsRpcOptions struct {
	Timeout time.Duration
}
type NatsRpcOption func(*NatsRpcOptions)

func WithTimeout(timeout time.Duration) NatsRpcOption {
	return func(opt *NatsRpcOptions) {
		opt.Timeout = timeout
	}
}

var DefaultNatsRpcOptions = func() *NatsRpcOptions {
	return &NatsRpcOptions{
		Timeout: 5 * time.Minute,
	}
}

func NewNatsRpcOptions(opts ...NatsRpcOption) *NatsRpcOptions {
	opt := DefaultNatsRpcOptions()
	for _, o := range opts {
		o(opt)
	}
	return opt
}

func sendError(msg *nats.Msg, err error) {
    msg.RespondMsg(&nats.Msg{
        Header: nats.Header{
            "error": []string{err.Error()},
        },
    })
}

func sendSuccess(msg *nats.Msg, res proto.Message) {
    resBytes, err := proto.Marshal(res)
    if err != nil {
        sendError(msg, fmt.Errorf("failed to marshal response: %w", err))
        return
    }
    msg.Respond(resBytes)
}

func sendEOF(msg *nats.Msg) {
    msg.Respond(nil)
}
{% endfunc %}